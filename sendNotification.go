package main

import (
	"database/sql"
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
	"strconv"
	"time"
)

func sendMessageBitcoin(bitcoinNow infoBitcoin,db *sql.DB,bot *tgbotapi.BotAPI,updateRate time.Duration,errInfoBitcoinPars *error){
	for ; ; {
		time.Sleep(updateRate)
		if *errInfoBitcoinPars==nil{
			var msgText string
			if bitcoinNow.isIncrease{
				msgText=fmt.Sprintf("–ö—É—Ä—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:1‚Çø  = %vüí≤ \n–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ Bitcoin –ø–æ–¥–æ—Ä–æ–∂–∞–ª –Ω–∞ %vüí≤ (+%v%%)",
					bitcoinNow.Cost,bitcoinNow.changeCostUSD,bitcoinNow.changeCostPr)
			}else {
				msgText=fmt.Sprintf("–ö—É—Ä—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:1‚Çø  = %vüí≤ \n–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ Bitcoin –ø–æ–¥–µ—à–µ–≤–µ–ª –Ω–∞ %vüí≤ (%v%%)",
					bitcoinNow.Cost,bitcoinNow.changeCostUSD*(-1),bitcoinNow.changeCostPr)
			}
			allChatId,err:=allChatIdInfoBitcoinDB(db)
			errorsWorkDB(InfoBitcoinDB,giveInfo,err)
			for _,chatId:=range allChatId{
				msg :=tgbotapi.NewMessage(chatId,msgText)
				_,err =bot.Send(msg)
				if err!=nil{
					errorsMessage(placeSendMessageAboutBitcoin,err,msg,db)
				}
			}
		}
	}
}
//–ß–∞—Å—Ç—å –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ü–µ–Ω—ã
//–ø—Ä–æ–≤–µ—Ä–∏–º —Ü–µ–Ω—É –Ω–∞ –±–∏—Ç–∫–æ–∏–Ω –∏ —Å—Ä–∞–≤–Ω–∏–º –µ–µ —Å —Ç–µ–º–∏, —á—Ç–æ –µ—Å—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å–∞—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ
func sendMessageAboutCostBitcoin(bitcoinNow infoBitcoin,db *sql.DB,bot *tgbotapi.BotAPI,updateRate time.Duration,errInfoBitcoinPars *error){
	for;;{
		time.Sleep(updateRate)
		if *errInfoBitcoinPars==nil{
			//–∏–∑ –±–¥ –ø–æ–ª—É—á–∏–º —é–∑–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ
			users,err:=allChatIdCostDB(bitcoinNow.Cost,db)
			errorsWorkDB(ChatIdCostDB,giveInfo,err)
			//–æ—Ç–ø—Ä–∞–≤–∏–º —é–∑–µ—Ä–∞–º –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ
			for _,user:=range users{
				msg :=tgbotapi.NewMessage(int64(user.ChatId),"Bitcoin –¥–æ—Å—Ç–∏–≥ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ "+
					strconv.FormatFloat(user.cost,'f',2,64)+" USD\n"+
					"–°–µ–π—á–∞—Å —Ü–µ–Ω–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç "+strconv.FormatFloat(bitcoinNow.Cost,'f',2,64)+" USD.")
				_,err =bot.Send(msg)
				if err!=nil{
					errorsMessage(placeMessageNotCommand,err,msg,db)
				}
			}
		}
	}
}
//–ß–∞—Å—Ç—å –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–æ—Å—Ç–æ–º —Ü–µ–Ω—ã
//–ø—Ä–æ–≤–µ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ –±–∏—Ç–∫–æ–∏–Ω –∏ —Å—Ä–∞–≤–Ω–∏–º –µ–≥–æ —Å —Ç–µ–º–∏, —á—Ç–æ –µ—Å—Ç—å  –≤ —Ç–∞–±–ª–∏—Ü–µ
func sendMessageAboutChangeCostBitcoin(bitcoinNow infoBitcoin,db *sql.DB,bot *tgbotapi.BotAPI,updateRate time.Duration,errInfoBitcoinPars *error){
	for;;{
		time.Sleep(updateRate)
		if *errInfoBitcoinPars==nil{
			//–∏–∑ –±–¥ –ø–æ–ª—É—á–∏–º —é–∑–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ
			users,err:=allChatIdChangeCostDB(bitcoinNow.changeCostUSD,db)
			errorsWorkDB(ChatIdChangeCostDB,giveInfo,err)
			//–æ—Ç–ø—Ä–∞–≤–∏–º —é–∑–µ—Ä–∞–º –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ
			for _,user:=range users{
				msg :=tgbotapi.NewMessage(int64(user.ChatId),"–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã Bitcoin`a –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–æ "+
					strconv.FormatFloat(user.cost,'f',2,64)+" USD\n"+
					"–ò —Å–µ–π—á–∞—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç "+strconv.FormatFloat(bitcoinNow.changeCostUSD,'f',2,64)+" USD.")
				_,err =bot.Send(msg)
				if err!=nil{
					errorsMessage(placeSendMessageAboutBitcoin,err,msg,db)
				}
			}
		}
	}
}